import React from "react"
import { Link, graphql } from "gatsby"
import { MDXRenderer } from "gatsby-plugin-mdx"
import { MDXProvider } from "@mdx-js/react"

import Nav from "../components/nav"
import Layout from "../components/layout"
import SEO from "../components/seo"
import AudioPlayer from "../components/audio-player"
import { rhythm, scale } from "../utils/typography"

const shortcodes = { AudioPlayer }

class BlogPostTemplate extends React.Component {
  render() {
    const post = this.props.data.mdx
    const siteTitle = this.props.data.site.siteMetadata.title
    const { previous, next } = this.props.pageContext

    return (
      <Layout location={this.props.location} title={siteTitle}>
        <SEO
          title={post.frontmatter.title}
          // description={post.frontmatter.description || post.excerpt}
        />
        <div
          className="post-item"
          style={{
            textAlign: "center",
          }}
        >
          <h1
            style={{ letterSpacing: "2px", color: "#666", fontWeight: "700" }}
          >
            {post.frontmatter.title}
          </h1>
          <p
            style={{
              ...scale(-1 / 5),
              display: `block`,
              marginBottom: "1rem",
              marginTop: rhythm(-1),
            }}
          >
            {post.frontmatter.date}
          </p>
          <MDXProvider components={shortcodes}>
            <MDXRenderer>{post.body}</MDXRenderer>
          </MDXProvider>
        </div>
        <hr
          style={{
            marginBottom: rhythm(1),
          }}
        />
        <Nav />
        <ul
          className="pagination--post"
          style={{
            display: `flex`,
            flexWrap: `wrap`,
            justifyContent: `space-between`,
            listStyle: `none`,
            padding: 0,
          }}
        >
          <li>
            {previous && (
              <Link to={`post${previous.fields.slug}`} rel="prev">
                ←{" "}
                {previous.frontmatter.title > 18
                  ? previous.frontmatter.title.substring(0, 15) + "..."
                  : previous.frontmatter.title}
              </Link>
            )}
          </li>
          <li>
            {next && (
              <Link to={`post${next.fields.slug}`} rel="next">
                {next.frontmatter.title > 18
                  ? next.frontmatter.title.substring(0, 15) + "..."
                  : next.frontmatter.title}{" "}
                →
              </Link>
            )}
          </li>
        </ul>
      </Layout>
    )
  }
}

export default BlogPostTemplate

export const pageQuery = graphql`
  query BlogPostBySlug($slug: String!) {
    site {
      siteMetadata {
        title
        author
      }
    }
    mdx(fields: { slug: { eq: $slug } }) {
      id
      excerpt(pruneLength: 160)
      body
      frontmatter {
        title
        date(formatString: "MMMM DD, YYYY")
        audio
        slug
      }
    }
  }
`
